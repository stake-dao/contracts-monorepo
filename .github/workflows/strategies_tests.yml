name: Strategies - Tests

env:
  FOUNDRY_PROFILE: "ci"
  NODE_VERSION: "22.18.0"
  PNPM_VERSION: "9.4.0"
  YARN_VERSION: "3.6.4"
  ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}
  MNEMONIC: ${{ secrets.MNEMONIC }}

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "packages/strategies/**"
      - ".github/workflows/strategies_unit-tests.yml" # this file
      - "packages/address-book/**" # dependency
      - "packages/interfaces/**" # dependency
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack & pin versions
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
          corepack prepare yarn@${{ env.YARN_VERSION }} --activate

      - name: Install dependencies
        run: pnpm install --filter ./packages/strategies --ignore-scripts

      # the seed changes weekly to avoid burning through RPC allowance
      - name: Generate the weekly fuzz seed
        run: >
          echo "FOUNDRY_FUZZ_SEED=$(
            echo $(($EPOCHSECONDS - $EPOCHSECONDS % 604800))
          )" >> $GITHUB_ENV

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          cache: true # cache RPC calls
          cache-key: foundry-rpc-cache-strategies-${{ env.FOUNDRY_FUZZ_SEED }}
          cache-restore-keys: |
            foundry-rpc-cache-strategies-${{ env.FOUNDRY_FUZZ_SEED }}
            foundry-rpc-cache-strategies-

      - name: Run tests
        working-directory: packages/strategies
        run: forge test -v --fail-fast

  coverage:
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: write # to upload the coverage report
      actions: read # to read the coverage report uploaded by another branch
      pull-requests: write # to post a comment on the PR

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack & pin versions
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
          corepack prepare yarn@${{ env.YARN_VERSION }} --activate

      - name: Install dependencies
        run: pnpm install --filter ./packages/strategies --ignore-scripts

      # the seed changes weekly to avoid burning through RPC allowance
      - name: Generate the weekly fuzz seed
        run: >
          echo "FOUNDRY_FUZZ_SEED=$(
            echo $(($EPOCHSECONDS - $EPOCHSECONDS % 604800))
          )" >> $GITHUB_ENV

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          cache: true # cache RPC calls
          cache-key: foundry-rpc-cache-strategies-${{ env.FOUNDRY_FUZZ_SEED }}
          cache-restore-keys: |
            foundry-rpc-cache-strategies-${{ env.FOUNDRY_FUZZ_SEED }}
            foundry-rpc-cache-strategies-

      - name: Build contracts
        working-directory: packages/strategies
        run: forge build

      - name: Run coverage
        working-directory: packages/strategies
        run: forge coverage --report lcov --no-match-coverage "(script|test)" -v

      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v4
        with:
          # the coverage file path is evaluated before the working-directory is set
          coverage-files: packages/strategies/lcov.info
          title-prefix: "Strategies | "
          artifact-name: strategies-code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: packages/strategies
          update-comment: true
