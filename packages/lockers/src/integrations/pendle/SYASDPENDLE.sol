// SPDX-License-Identifier: BUSL-1.1
pragma solidity 0.8.28;

import {PendleERC4626WithAdapterSY} from
    "@pendle/v2-sy/StandardizedYield/implementations/Adapter/extensions/PendleERC4626WithAdapterSY.sol";
import {PendleLocker} from "@address-book/src/PendleEthereum.sol";

/// @title SY-asdPENDLE – Pendle Standardized Yield Adapter for asdPENDLE
/// @notice
///  - This contract enables asdPENDLE (auto-compounding sdPENDLE vault token from AladdinDAO/Stake DAO)
///    to be used in the Pendle Protocol.
///  - Users can deposit sdPENDLE, or asdPENDLE and receive SYASDPENDLE, which can be strip
///    into Principal Tokens (PT) and Yield Tokens (YT) for yield trading.
///  - At maturity, PT can be redeemed for the value of asdPENDLE in sdPENDLE
///  - YT entitles holders to all yield generated by asdPENDLE until maturity.
///  - All yield is auto-compounded into asdPENDLE; there are no extra rewards to claim via this contract.
///  - Redemptions can be made to either asdPENDLE (vault share token) or sdPENDLE (underlying asset).
///  - asdPENDLE is the asset of this contract, SYASDPENDLE is the share.
/// @dev
///  - This is an ERC-5115 wrapped yield-bearing tokens compliant contract
///  - Relies on the ERC-4626 compliance and transferability of asdPENDLE.
///  - Assumes asdPENDLE’s strategy auto-compounds all rewards into sdPENDLE.
///  - Assumes any custom fee is set on the asdPENDLE contract for this contract.
///  - The value of PT at maturity is determined by the asdPENDLE:sdPENDLE exchange rate at that time.
///  - No custom claimRewards logic is implemented, as all yield is auto-compounded.
///  - Set infinite approvals on the asset to the yield token.
///
/// | Token             | Role/Meaning                                          |
/// |-------------------|-------------------------------------------------------|
/// | sdPENDLE          | Underlying asset (principal)                          |
/// | asdPENDLE         | Yield-bearing vault token (auto-compounds sdPENDLE)   |
/// | SY-asdPENDLE      | Pendle-compatible wrapper for asdPENDLE               |
/// | PT-asdPENDLE      | Principal Token (redeemable for sdPENDLE at maturity) |
/// | YT-asdPENDLE      | Yield Token (entitles holder to yield until maturity) |
///
/// @author StakeDAO
/// @custom:contact contact@stakedao.org
contract SYASDPENDLE is PendleERC4626WithAdapterSY {
    constructor() PendleERC4626WithAdapterSY(PendleLocker.ASDTOKEN) {}

    /// @notice Initialize the SY contract
    /// @param [unused] A hardcoded value is used
    /// @param [SY-asdPENDLE] A hardcoded value is used
    function initialize(string memory, string memory, address _adapter) external override initializer {
        __SYBaseUpg_init("Standardized Yield asdPENDLE", "SY-asdPENDLE");

        // Give infinite approval on the asset (SDPENDLE) to the yield token (ASDPENDLE)
        _safeApproveInf(asset, yieldToken);
        _setAdapter(_adapter);
    }
}
